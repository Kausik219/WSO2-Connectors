<?xml version="1.0" encoding="UTF-8"?><proxy xmlns="http://ws.apache.org/ns/synapse" name="salesBinder_createCustomers_Scenario" startOnLoad="true" statistics="disable" trace="disable" transports="https http">
    <target>
        <inSequence>
            <property expression="json-eval($.amoCrmApiUrl)" name="amoCRM.apiUrl"/>
            <property expression="json-eval($.amoCrmApiKey)" name="amoCRM.apiKey"/>
            <property expression="json-eval($.amoCrmVersion)" name="amoCRM.apiVersion" scope="operation"/>
            <property expression="json-eval($.amoCrmEmail)" name="amoCRM.email" scope="operation"/>
            <property expression="json-eval($.amoCrmId)" name="amoCRM.id" scope="operation"/>
            <property expression="json-eval($.salesBinderApiUrl)" name="salesbinder.apiUrl"/>
            <property expression="json-eval($.salesBinderApiToken)" name="salesbinder.apiKey"/>
            <property expression="count(//salesbinderCustomers)" name="salesbinder.customerCount" scope="operation"/>
            <property expression="0" name="salesbinder.customerIndex" scope="operation"/>
            <property expression="json-eval($.salesbinderCustomers)" name="salesbinder.customerObjects"/>
            <filter xpath="get-property('operation','salesbinder.customerCount') = 0">
                <then>
                    <property name="id" value="{}"/>
                    <property name="status" value="Skipped"/>
                    <property name="message" value="No entries to process."/>
                    <call-template target="responseHandlerTemplate">
                        <with-param name="id" value="{$ctx:id}"/>
                        <with-param name="activity" value="salesbinder_createCustomers"/>
                        <with-param name="status" value="{$ctx:status}"/>
                        <with-param name="message" value="{$ctx:message}"/>
                    </call-template>
                </then>
                <else>
                    <sequence key="createAccountIterator"/>
                </else>
            </filter>
            <amoCRM.init>
                <apiUrl>{$ctx:apiUrl}</apiUrl>
                <apiKey>{$ctx:apiKey}</apiKey>
                <apiVersion>{$ctx:apiVersion}</apiVersion>
                <email>{$ctx:email}</email>
            </amoCRM.init>
            <amoCRM.getContacts>
                <id>{$ctx:id}</id>
            </amoCRM.getContacts>
            <salesbinder.init>
                <apiUrl>{$ctx:salesbinder.apiUrl}</apiUrl>
                <apiKey>{$ctx:salesbinder.apiKey}</apiKey>
            </salesbinder.init>
            <property expression="$trp:Authorization" name="authorizationHeader"/>
            <salesbinder.createAccount>
                <billingAddress1>{$ctx:salesbinder.billingAddress1}</billingAddress1>
                <shippingPostalCode>{$ctx:salesbinder.shippingPostalCode}</shippingPostalCode>
                <shippingAddress1>{$ctx:salesbinder.shippingAddress1}</shippingAddress1>
                <url>{$ctx:salesbinder.url}</url>
                <contextId>{$ctx:salesbinder.contextId}</contextId>
                <billingPostalCode>{$ctx:salesbinder.billingPostalCode}</billingPostalCode>
                <officeEmail>{$ctx:salesbinder.officeEmail}</officeEmail>
                <name>{$ctx:salesbinder.name}</name>
                <billingCity>{$ctx:salesbinder.billingCity}</billingCity>
                <shippingCountry>{$ctx:salesbinder.shippingCountry}</shippingCountry>
                <billingCountry>{$ctx:salesbinder.billingCountry}</billingCountry>
                <shippingCity>{$ctx:salesbinder.shippingCity}</shippingCity>
                <billingAddress2>{$ctx:salesbinder.billingAddress2}</billingAddress2>
                <officeFax>{$ctx:salesbinder.officeFax}</officeFax>
                <shippingAddress2>{$ctx:salesbinder.shippingAddress2}</shippingAddress2>
                <billingRegion>{$ctx:salesbinder.billingRegion}</billingRegion>
                <officeNumber>{$ctx:salesbinder.officeNumber}</officeNumber>
                <shippingRegion>{$ctx:salesbinder.shippingRegion}</shippingRegion>
                <customerLabelId>{$ctx:salesbinder.customerLabelId}</customerLabelId>
            </salesbinder.createAccount>
            <filter regex="200" source="$axis2:HTTP_SC">
                <then>
                    <property expression="json-eval($.content[0].aid)" name="amoCrm.id"/>
                    <property expression="json-eval($.content[0].an)" name="amoCrm.name"/>
                    <property expression="get-property('amoCrm.name')" name="salesbinder.name"/>
                </then>
            </filter>
            <payloadFactory media-type="json">
                <format>{
                                          "salesbinderCustomers": $1
                                          }
                                       </format>
                <args>
                    <arg expression="get-property('salesbinder.customerObjects')"/>
                </args>
            </payloadFactory>
            <sequence key="createAccountIterator"/>
        </inSequence>
        <outSequence>
            <send/>
        </outSequence>
    </target>
    <description/>
</proxy>
                                
